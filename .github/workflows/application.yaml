name: 'Application'

on:
  push:
    tags-ignore:
      - 'k8s/**'
      - 'tf/**'
      - '.circleci/**'
  workflow_dispatch:

env:
  REGISTRY: 'ghcr.io'
  IMAGE_NAME: ${{ github.repository }}

jobs:
  install:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v3'
      - uses: 'actions/setup-node@v3'
        with:
          node-version: '16'
          cache: 'npm'
      - run: 'npm ci'
  eslint:
    runs-on: 'ubuntu-latest'
    needs: ['install']
    steps:
      - uses: 'actions/checkout@v3'
      - uses: 'actions/setup-node@v3'
        with:
          node-version: '16'
          cache: 'npm'
      - run: 'npm ci'
      - run: 'npm run lint:js'
  jest:
    runs-on: 'ubuntu-latest'
    needs: ['install']
    steps:
      - uses: 'actions/checkout@v3'
      - uses: 'actions/setup-node@v3'
        with:
          node-version: '16'
          cache: 'npm'
      - run: 'npm ci'
      - run: 'npm test'
  build:
    runs-on: 'ubuntu-latest'
    needs: ['eslint', 'jest']
    steps:
      - uses: 'actions/checkout@v3'
      - uses: 'actions/setup-node@v3'
        with:
          node-version: '16'
          cache: 'npm'
      - run: 'npm ci'
      - name: 'Get environment variables'
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
      - run: 'npm run build'
      - uses: 'actions/cache@v3'
        with:
          path: 'dist'
          key: ${{ runner.os }}-${{ hashFiles('dist') }}
  deploy:
    runs-on: 'ubuntu-latest'
    needs: ['build']
    permissions:
      contents: 'read'
      packages: 'write'
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - uses: 'actions/checkout@v3'
      - name: 'Extract metadata (tags, labels) for Docker'
        id: 'meta'
        uses: 'docker/metadata-action@v4'
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: 'Log in to the Container registry'
        uses: 'docker/login-action@v2'
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Build and push Docker image'
        uses: 'docker/build-push-action@v3'
        with:
          context: '.'
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
