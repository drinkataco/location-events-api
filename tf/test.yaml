apiVersion: v1
kind: Service
metadata:
  labels:
    app: api
  name: api
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: app-env
        image: ghcr.io/drinkataco/location-events-api:latest
        imagePullPolicy: Always
        name: api
        ports:
        - containerPort: 3000
          protocol: TCP
      imagePullSecrets:
      - name: ghcr-drinkataco
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: ingress-certificate
  namespace: default
spec:
  commonName: dev-location-events-api.proj.shw.al
  dnsNames:
  - dev-location-events-api.proj.shw.al
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt
  secretName: ingress-certificate
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt
spec:
  acme:
    email: josh.walwyn@gmail.com
    privateKeySecretRef:
      name: letsencrypt
    server: https://acme-v02.api.letsencrypt.org/directory
    solvers:
    - http01:
        ingress:
          class: traefik
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
  name: api-ingress
spec:
  entryPoints:
  - websecure
  routes:
  - kind: Rule
    match: PathPrefix(`/graphql`)
    middlewares:
    - name: ingress-secure-headers
    services:
    - name: api
      port: 80
  tls:
    secretName: ingress-certificate
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: ingress-secure-headers
spec:
  headers:
    stsSeconds: 31536
